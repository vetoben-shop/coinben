$body = @{ symbol="PIPPINUSDT"; productType="USDT-FUTURES"; marginMode="crossed"; side="buy"; quantity=606; intent="close"; dryRun=$false } | ConvertTo-Json -Depth 5
Invoke-RestMethod -Uri "http://localhost:8789/mix/market-order" -Method POST -Headers @{ "Content-Type"="application/json" } -Body $body


=============================================

전략 개요 (현물+선물 헤지, 스프레드 스캘핑)

기본 루프(Spot)

지정 심볼에 대해 짧은 주기로 저가 매수 → 목표 스프레드 도달 시 매도

목표 이익 = sell_px ≥ buy_px × (1 + spread%) (수수료·슬리피지 포함 넷 기준)

재매수(물타기 규칙)

직전 “판매가” 대비 –10% 하락 시 자동 재매수

재매수 후 목표 스프레드 달성 시 반복 → 총 수량 누적

선물 헤지(즉시 방패)

현물 진입 후 가격이 불리하게 가면, 설정된 역방향 트리거에서 선물 포지션 즉시 진입

예시: Spot BUY 후 가격이 –H% 하락 → Futures SHORT 진입해 PnL 중립화

반대로 Spot SELL 후 +H% 상승 → Futures LONG

헤지 포지션은 부분/전량 자동 청산 규칙(반등, 시간, PnL, 또는 현물 청산 시 동기 청산)으로 관리

헤지 이익도 현물 재매수 재원으로 즉시 환원 → 수량 증가 가속

사용자가 조정할 파라미터 (UI에서 수동 지정)

Symbol(필수, 예: BTCUSDT)

Spread % (목표 마진, 예: 0.30%~0.80%)

Hedge Trigger % (역행 폭, 예: 0.4%~1.0%)

Order Size: 값/수량(USDT or COIN), 최대 동시 주문수/빈도

Leverage(선물), Position Mode(Cross/Isolated)

TP/SL %(선택), Safety Mode(긴급 차단 스위치)

실행 흐름 (요약)

시그널링:

틱/초 단위로 최우선호가·스프레드·괴리·체결속도 체크

지정 Spread% 충족 시 수수료·예상 슬리피지 반영 넷 기준으로 체결 의사결정

주문 라우팅:

현물/선물 주문은 기존 Node 서버 엔드포인트로 POST (UI와 동일 경로)

서버의 PolicyGate가 속도/한도/세이프모드 검사 → 통과 시 거래소 실행

헤지 관리:

역행폭 H% 도달 시 즉시 선물 진입(방향 반대)

반등/시간/PNL 조건 중 하나 만족 시 청산(전량/부분)

재투자·수량증가:

헤지·스프레드 이익을 현물 재매수로 전환 → 재고(코인 수량) 누적

성능·위험 모니터링:

실시간 NCA/hr, NCAeff/hr(수수료 포함), 체결율, 거절율, 평균 스프레드

급격한 스프레드 붕괴·괴리 확대 시 거래 축소/일시정지(안전장치만 유지)

최소 안전장치(공격적 운용 전제, 그래도 필수)

주문 레이트·체결 금액 상한(서버 PolicyGate와 동기)

슬리피지/스프레드 붕괴 감지 시 자동 감속(Throttle)

데이터 지연·API 오류 시 Safe Mode 전환

심볼 단위 Halt(비정상 스냅 발생 시)

산출물(내가 개발해서 제공)

AutoTradingBot.py

비동기 루프, 스프레드 체커, 재매수 로직, 헤지 엔진, 수수료·슬리피지 반영

Node 서버 REST 연계(현물/선물), 지수 백오프/재시도, 구조화 로깅

RiskManagementBot.py

유동성·스프레드·괴리·붕괴 감시 → Throttle/Hold/Halt 신호

서버의 세이프모드/킬스위치/심볼Halt 제어 훅과 연계

trade.html / trade.css, risk.html / risk.css 반응형 업그레이드

auto-fit/minmax 그리드, clamp() 폰트, 데스크톱~모바일 대응

기존 클래스/ID/이벤트 훅 불변, 기능 변경 없음

운영

pm2로 24×7: Node 서버(기존) + AutoTradingBot + RiskManagementBot

드라이런 모드/실전 모드 전환 스위치 제공

알림(선택): 실패/정지/복구 이벤트 푸시

다음 액션(당신은 심볼만 정하면 됨):

예: “BTCUSDT, Spread 0.5%, Hedge 0.8%, Size 50 USDT”

그리고 한 줄:

code generate: build AutoTradingBot.py and RiskManagementBot.py + make trade/risk UI responsive


그럼 바로 코드 전체를 만들어 실행 단계까지 안내하겠습니다.